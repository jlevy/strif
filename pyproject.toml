[project]
name = "strif"
description = "Tiny, useful Python lib for strings and files"
authors = [
    { name="Joshua Levy", email="joshua@cal.berkeley.edu" },
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10,<4.0"
dynamic = [ "dependencies", "version" ]

[tool.poetry]
requires-poetry = ">=2.0"
packages = [
    { include = "strif", from = "src" },
]
# Keep this a dev version, as the dynamic versioning plugin is used for actual release versions:

# See: https://github.com/mtkennerly/poetry-dynamic-versioning
version = "0.0.0.dev"
[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.7.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[project.scripts]
# Add script entry points here.
# strif = "strif:main"

# See:
# https://github.com/python-poetry/poetry-plugin-shell
# https://github.com/MousaZeidBaker/poetry-plugin-up
[tool.poetry.requires-plugins]
poetry-plugin-shell = "^1.0.1"
poetry-plugin-up = "^0.9.0"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
pytest = "^8.3.4"
ruff = "^0.4.10"
usort = "^1.0.8.post1"
mypy = "^1.15.0"
codespell = "^2.4.1"
rich = "^13.9.4"

# Auto-generated version for builds based on git tag or commit.
#
# Preferred styles of versioning (PEP 440 compliant):
#   1.2.3               (stable release)
#   1.2.3a4             (pre-release, no dash or dots)
#   1.2.3rc1            (release candidate)
#   1.2.3.dev4+abcdef12 (development build, .dev for dev releases and +commit hash)
#
# Tags with a "v" prefix (e.g., v1.2.3) or additional dots (e.g., v1.2.3.rc1) are recognized
# but normalized to the preferred style for distribution.
# See: https://sam.hooke.me/note/2023/08/poetry-automatically-generated-package-version-from-git-commit/
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^v?(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"
format-jinja = """{%- if distance == 0 -%}
        {{- base -}}
        {%- if stage -%}
            {{ stage }}{{ revision | default("") }}
        {%- endif -%}
    {%- else -%}
        {{- base }}.dev{{ distance }}+{{commit}}
    {%- endif -%}"""

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = ["E402", "E731", "E712"]

[tool.mypy]
disable_error_code = [
    "import-untyped",
]

[tool.codespell]
# ignore-words-list = "foo,bar"
# skip = "foo.py,bar.py"

[tool.pytest.ini_options]
python_files = ["*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = [
    "src",
    "tests",
]
norecursedirs = []
filterwarnings = []
